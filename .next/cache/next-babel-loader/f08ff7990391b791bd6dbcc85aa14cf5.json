{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Volumes/Disk/works/react/corona_live_info/components/Table.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  /* padding: 1rem; */\\n  -webkit-overflow-scrolling: touch;\\n  table {\\n    border-spacing: 0;\\n    border-bottom: solid 1px rgba(102,119,136,.15);\\n    width: 100%;\\n    tr {\\n      :last-child {\\n        td {\\n          border-bottom: 0;\\n        }\\n      }\\n    }\\n    th {\\n      border-top: solid 1px white;\\n      position: sticky;\\n      top: -1px;\\n      background: white;\\n    }\\n    th,\\n    td {\\n      margin: 0;\\n      padding: 0.5rem 1rem;\\n      text-align: left;\\n      border-bottom: solid 1px rgba(102,119,136,.15);\\n      border-right: 0px solid black;\\n\\n      :last-child {\\n        border-right: 0;\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { useTable } from 'react-table';\nvar Styles = styled.div(_templateObject());\n\nvar Table = function Table(_ref) {\n  var columns = _ref.columns,\n      data = _ref.data,\n      height = _ref.height;\n\n  // Use the state and functions returned from useTable to build your UI\n  var _useTable = useTable({\n    columns: columns,\n    data: data\n  }),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow; // Render the UI for your table\n\n\n  return __jsx(Styles, {\n    style: {\n      height: \"\".concat(height, \"px\"),\n      overflowY: 'scroll'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"table\", _extends({}, getTableProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, headerGroups.map(function (headerGroup) {\n    return __jsx(\"tr\", _extends({}, headerGroup.getHeaderGroupProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), headerGroup.headers.map(function (column) {\n      return __jsx(\"th\", _extends({}, column.getHeaderProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), column.render('Header'));\n    }));\n  })), __jsx(\"tbody\", _extends({}, getTableBodyProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), rows.map(function (row, i) {\n    prepareRow(row);\n    return __jsx(\"tr\", _extends({}, row.getRowProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), row.cells.map(function (cell) {\n      return __jsx(\"td\", _extends({}, cell.getCellProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), cell.render('Cell'));\n    }));\n  }))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/Volumes/Disk/works/react/corona_live_info/components/Table.tsx"],"names":["React","styled","useTable","Styles","div","Table","columns","data","height","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","overflowY","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,IAAMC,MAAM,GAAGF,MAAM,CAACG,GAAV,mBAAZ;;AAyCA,IAAMC,KAA0B,GAAG,SAA7BA,KAA6B,OAA+B;AAAA,MAA5BC,OAA4B,QAA5BA,OAA4B;AAAA,MAAnBC,IAAmB,QAAnBA,IAAmB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAChE;AADgE,kBAQ5DN,QAAQ,CAAC;AACXI,IAAAA,OAAO,EAAPA,OADW;AAEXC,IAAAA,IAAI,EAAJA;AAFW,GAAD,CARoD;AAAA,MAG9DE,aAH8D,aAG9DA,aAH8D;AAAA,MAI9DC,iBAJ8D,aAI9DA,iBAJ8D;AAAA,MAK9DC,YAL8D,aAK9DA,YAL8D;AAAA,MAM9DC,IAN8D,aAM9DA,IAN8D;AAAA,MAO9DC,UAP8D,aAO9DA,UAP8D,EAahE;;;AACA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACL,MAAAA,MAAM,YAAKA,MAAL,OAAP;AAAwBM,MAAAA,SAAS,EAAE;AAAnC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,4BAAWL,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAACI,GAAb,CAAiB,UAAAC,WAAW;AAAA,WAC3B,yBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwB,UAAAI,MAAM;AAAA,aAC7B,yBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd,CAAlC,CAD6B;AAAA,KAA9B,CADH,CAD2B;AAAA,GAA5B,CADH,CADF,EAUE,4BAAWX,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGE,IAAI,CAACG,GAAL,CAAS,UAACO,GAAD,EAAMC,CAAN,EAAY;AACpBV,IAAAA,UAAU,CAACS,GAAD,CAAV;AACA,WACE,yBAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGF,GAAG,CAACG,KAAJ,CAAUV,GAAV,CAAc,UAAAW,IAAI,EAAI;AACrB,aAAO,yBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ,CAA9B,CAAP;AACD,KAFA,CADH,CADF;AAOD,GATA,CADH,CAVF,CADA,CADF;AA2BD,CAzCD;;AA2CA,eAAehB,KAAf","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled';\nimport { useTable } from 'react-table'\n\nconst Styles = styled.div`\n  /* padding: 1rem; */\n  -webkit-overflow-scrolling: touch;\n  table {\n    border-spacing: 0;\n    border-bottom: solid 1px rgba(102,119,136,.15);\n    width: 100%;\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n    th {\n      border-top: solid 1px white;\n      position: sticky;\n      top: -1px;\n      background: white;\n    }\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem 1rem;\n      text-align: left;\n      border-bottom: solid 1px rgba(102,119,136,.15);\n      border-right: 0px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`\n\ninterface TableProps {\n  columns: any,\n  data: any,\n  height?: number;\n}\n\nconst Table:React.FC<TableProps> = ({ columns, data, height }) => {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  })\n\n  // Render the UI for your table\n  return (\n    <Styles style={{height: `${height}px`, overflowY: 'scroll'}}>\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    </Styles>\n  )\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}